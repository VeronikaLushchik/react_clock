{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timer","setInterval","setState","console","log","toLocaleTimeString","this","clearInterval","React","Component","App","isClockVisible","name","showClock","hideClock","setRandomName","oldName","newName","Math","ceil","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,MAAQC,aAAY,WAClB,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,OAE1BI,QAAQC,IAAI,EAAKP,MAAMC,KAAKO,wBAC3B,KATL,uDAWE,WACE,OAAOC,KAAKN,QAZhB,kCAeE,WACEO,cAAcD,KAAKN,SAhBvB,oBAmBE,WACE,OACE,qCACE,8CACA,8BAAMM,KAAKT,MAAMC,KAAKO,8BAvB9B,GAA2BG,IAAMC,WCoElBC,EAtEf,4MACEb,MAAe,CACbc,gBAAgB,EAChBC,KAAM,GAHV,EAMEC,UAAY,WACV,EAAKX,SAAS,CAAES,gBAAgB,KAPpC,EAUEG,UAAY,WACV,EAAKZ,SAAS,CAAES,gBAAgB,KAXpC,EAcEI,cAAgB,WACV,EAAKlB,MAAMc,gBACb,EAAKT,UAAS,SAACc,GACb,IAAMC,EAAUC,KAAKC,KAAqB,IAAhBD,KAAKE,UAK/B,OAFAjB,QAAQC,IAAR,qCAA0CY,EAAQJ,KAAlD,eAA6DK,IAEtD,CACLL,KAAMK,OAvBhB,4CA6BE,WACE,MAAiCX,KAAKT,MAA9Bc,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,KAExB,OACE,sBAAKS,UAAU,MAAf,UACE,6CAEA,sBAAKA,UAAU,QAAf,UACE,qDAAsBT,KAErBD,GAAkB,cAAC,EAAD,CAAOC,KAAMA,IAEhC,wBACEU,KAAK,SACLD,UAAU,gBACVE,QAASjB,KAAKO,UAHhB,wBAQA,wBACES,KAAK,SACLD,UAAU,gBACVE,QAASjB,KAAKQ,UAHhB,wBAQA,wBACEQ,KAAK,SACLD,UAAU,gBACVE,QAASjB,KAAKS,cAHhB,uCAzDV,GAAyBP,IAAMC,WCN/Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.370d7a3e.chunk.js","sourcesContent":["import React from 'react';\n// import './Clock.scss';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timer = setInterval(() => {\n    this.setState({ date: new Date() });\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n  }, 1000);\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <>\n        <p>Current time:</p>\n        <div>{this.state.date.toLocaleTimeString()}</div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  name: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    name: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandomName = () => {\n    if (this.state.isClockVisible) {\n      this.setState((oldName) => {\n        const newName = Math.ceil(Math.random() * 1000);\n\n        // eslint-disable-next-line no-console\n        console.log(`The Clock was renamed from ${oldName.name} to ${newName}`);\n\n        return {\n          name: newName,\n        };\n      });\n    }\n  };\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <div className=\"clock\">\n          <div>{`Random name: ${name}`}</div>\n\n          {isClockVisible && <Clock name={name} /> }\n\n          <button\n            type=\"button\"\n            className=\"clock__button\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"clock__button\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"clock__button\"\n            onClick={this.setRandomName}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}